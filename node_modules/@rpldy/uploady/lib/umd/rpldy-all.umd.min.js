/*! For license information please see rpldy-all.umd.min.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react"),require("react-dom")):"function"==typeof define&&define.amd?define(["react","react-dom"],t):"object"==typeof exports?exports.rpldy=t(require("react"),require("react-dom")):e.rpldy=t(e.react,e["react-dom"])}(globalThis,((e,t)=>(()=>{var r,n={qckQ:()=>{},"117w":e=>{e.exports=function(e){return"function"==typeof e}},BZmj:e=>{e.exports=function(){return!0}},OG09:(e,t,r)=>{"use strict";r.r(t),r.d(t,{abort:()=>a,chunkedSender:()=>l,chunkedUploady:()=>S,lifeEvents:()=>d,mockSender:()=>u,rawUploader:()=>Ct,retry:()=>p,retryHooks:()=>b,safeStorage:()=>h,sender:()=>o,shared:()=>s,sharedUi:()=>m,simpleState:()=>i,tusSender:()=>f,tusUploady:()=>E,uploadButton:()=>y,uploadDropZone:()=>v,uploadPaste:()=>I,uploadPreview:()=>R,uploadUrlInput:()=>O,uploader:()=>c,uploady:()=>g});var n={};r.r(n),r.d(n,{debugLog:()=>L,isDebugOn:()=>_,setDebug:()=>N});var s={};r.r(s),r.d(s,{BATCH_STATES:()=>P,FILE_STATES:()=>U,XhrPromise:()=>oe,clone:()=>V,createBatchItem:()=>ae,devFreeze:()=>M,getIsBatchItem:()=>se,getMerge:()=>G,hasWindow:()=>D,invariant:()=>T(),isEmpty:()=>ee,isFunction:()=>H(),isPlainObject:()=>j,isProduction:()=>q(),isPromise:()=>K,isSamePropInArrays:()=>F,logger:()=>n,merge:()=>Q,parseResponseHeaders:()=>ie,pick:()=>X,request:()=>le,scheduleIdleWork:()=>J,throttle:()=>C.A,triggerCancellable:()=>B,triggerUpdater:()=>te});var a={};r.r(a),r.d(a,{default:()=>ge});var o={};r.r(o),r.d(o,{MissingUrlError:()=>be,XHR_SENDER_TYPE:()=>Se,default:()=>Te,getXhrSend:()=>Oe,send:()=>Ae});var i={};r.r(i),r.d(i,{createState:()=>qe,default:()=>qe,isProxiable:()=>Le,isProxy:()=>Ne,unwrap:()=>$e});var l={};r.r(l),r.d(l,{CHUNKED_DEFAULT_OPTIONS:()=>Ce,CHUNKED_SENDER_TYPE:()=>je,CHUNKING_SUPPORT:()=>Pe,CHUNK_EVENTS:()=>Me,createChunkedSender:()=>et,default:()=>rt,getChunkDataFromFile:()=>Ue,getChunkedEnhancer:()=>tt});var d={};r.r(d),r.d(d,{addLife:()=>bt,createLifePack:()=>Et,default:()=>bt,isLE:()=>lt});var u={};r.r(u),r.d(u,{MOCK_SENDER_TYPE:()=>yt,createMockSender:()=>Ot,default:()=>Tt,getMockSenderEnhancer:()=>At});var c={};r.r(c),r.d(c,{BATCH_STATES:()=>P,DEFAULT_OPTIONS:()=>or,FILE_STATES:()=>U,MissingUrlError:()=>be,UPLOADER_EVENTS:()=>wt,XHR_SENDER_TYPE:()=>Se,composeEnhancers:()=>pr,createUploader:()=>mr,default:()=>gr,getXhrSend:()=>Oe,send:()=>Ae});var p={};r.r(p),r.d(p,{RETRY_EVENT:()=>br,RETRY_EXT:()=>Sr,default:()=>vr,retryEnhancer:()=>vr});var h={};r.r(h),r.d(h,{safeLocalStorage:()=>Rr,safeSessionStorage:()=>Or});var f={};r.r(f),r.d(f,{CHUNKING_SUPPORT:()=>Pe,TUS_EVENTS:()=>Br,TUS_EXT:()=>Ur,TUS_SENDER_TYPE:()=>Dr,clearResumables:()=>Pr,default:()=>nn,getTusEnhancer:()=>rn});var m={};r.r(m),r.d(m,{NoDomUploady:()=>qn,UploadyContext:()=>fn,assertContext:()=>mn,createContextApi:()=>hn,generateUploaderEventHook:()=>En,generateUploaderEventHookWithState:()=>bn,getIsUploadOptionsComponent:()=>$n,getUploadyVersion:()=>dn,logWarning:()=>Hn,markAsUploadOptionsComponent:()=>Fn,useAbortAll:()=>Gn,useAbortBatch:()=>zn,useAbortItem:()=>jn,useAllAbortListener:()=>Bn,useBatchAbortListener:()=>Tn,useBatchAddListener:()=>yn,useBatchCancelledListener:()=>Rn,useBatchErrorListener:()=>On,useBatchFinalizeListener:()=>An,useBatchFinishListener:()=>In,useBatchProgressListener:()=>Cn,useBatchStartListener:()=>vn,useItemAbortListener:()=>kn,useItemCancelListener:()=>Un,useItemErrorListener:()=>Dn,useItemFinalizeListener:()=>_n,useItemFinishListener:()=>Pn,useItemProgressListener:()=>Nn,useItemStartListener:()=>wn,useRequestPreSend:()=>Ln,useUploadOptions:()=>Mn,useUploady:()=>gn,useUploadyContext:()=>gn,withBatchStartUpdate:()=>Kn,withRequestPreSendUpdate:()=>Vn});var g={};r.r(g),r.d(g,{BATCH_STATES:()=>P,DEFAULT_OPTIONS:()=>or,FILE_STATES:()=>U,MissingUrlError:()=>be,NoDomUploady:()=>qn,UPLOADER_EVENTS:()=>wt,Uploady:()=>es,UploadyContext:()=>fn,XHR_SENDER_TYPE:()=>Se,assertContext:()=>mn,composeEnhancers:()=>pr,createContextApi:()=>hn,createUploader:()=>mr,default:()=>rs,generateUploaderEventHook:()=>En,generateUploaderEventHookWithState:()=>bn,getIsUploadOptionsComponent:()=>$n,getUploadyVersion:()=>dn,getXhrSend:()=>Oe,logWarning:()=>Hn,markAsUploadOptionsComponent:()=>Fn,send:()=>Ae,useAbortAll:()=>Gn,useAbortBatch:()=>zn,useAbortItem:()=>jn,useAllAbortListener:()=>Bn,useBatchAbortListener:()=>Tn,useBatchAddListener:()=>yn,useBatchCancelledListener:()=>Rn,useBatchErrorListener:()=>On,useBatchFinalizeListener:()=>An,useBatchFinishListener:()=>In,useBatchProgressListener:()=>Cn,useBatchStartListener:()=>vn,useFileInput:()=>ts,useItemAbortListener:()=>kn,useItemCancelListener:()=>Un,useItemErrorListener:()=>Dn,useItemFinalizeListener:()=>_n,useItemFinishListener:()=>Pn,useItemProgressListener:()=>Nn,useItemStartListener:()=>wn,useRequestPreSend:()=>Ln,useUploadOptions:()=>Mn,useUploady:()=>gn,useUploadyContext:()=>gn,withBatchStartUpdate:()=>Kn,withRequestPreSendUpdate:()=>Vn});var S={};r.r(S),r.d(S,{BATCH_STATES:()=>P,CHUNK_EVENTS:()=>Me,ChunkedUploady:()=>ns,DEFAULT_OPTIONS:()=>or,FILE_STATES:()=>U,MissingUrlError:()=>be,NoDomUploady:()=>qn,UPLOADER_EVENTS:()=>wt,Uploady:()=>es,UploadyContext:()=>fn,XHR_SENDER_TYPE:()=>Se,assertContext:()=>mn,composeEnhancers:()=>pr,createContextApi:()=>hn,createUploader:()=>mr,default:()=>os,generateUploaderEventHook:()=>En,generateUploaderEventHookWithState:()=>bn,getIsUploadOptionsComponent:()=>$n,getUploadyVersion:()=>dn,getXhrSend:()=>Oe,logWarning:()=>Hn,markAsUploadOptionsComponent:()=>Fn,send:()=>Ae,useAbortAll:()=>Gn,useAbortBatch:()=>zn,useAbortItem:()=>jn,useAllAbortListener:()=>Bn,useBatchAbortListener:()=>Tn,useBatchAddListener:()=>yn,useBatchCancelledListener:()=>Rn,useBatchErrorListener:()=>On,useBatchFinalizeListener:()=>An,useBatchFinishListener:()=>In,useBatchProgressListener:()=>Cn,useBatchStartListener:()=>vn,useChunkFinishListener:()=>as,useChunkStartListener:()=>ss,useFileInput:()=>ts,useItemAbortListener:()=>kn,useItemCancelListener:()=>Un,useItemErrorListener:()=>Dn,useItemFinalizeListener:()=>_n,useItemFinishListener:()=>Pn,useItemProgressListener:()=>Nn,useItemStartListener:()=>wn,useRequestPreSend:()=>Ln,useUploadOptions:()=>Mn,useUploady:()=>gn,useUploadyContext:()=>gn,withBatchStartUpdate:()=>Kn,withRequestPreSendUpdate:()=>Vn});var b={};r.r(b),r.d(b,{RETRY_EVENT:()=>br,default:()=>cs,retryEnhancer:()=>vr,useBatchRetry:()=>ds,useRetry:()=>ls,useRetryListener:()=>us});var E={};r.r(E),r.d(E,{BATCH_STATES:()=>P,DEFAULT_OPTIONS:()=>or,FILE_STATES:()=>U,MissingUrlError:()=>be,NoDomUploady:()=>qn,TusUploady:()=>ps,UPLOADER_EVENTS:()=>wt,Uploady:()=>es,UploadyContext:()=>fn,XHR_SENDER_TYPE:()=>Se,assertContext:()=>mn,composeEnhancers:()=>pr,createContextApi:()=>hn,createUploader:()=>mr,default:()=>ms,generateUploaderEventHook:()=>En,generateUploaderEventHookWithState:()=>bn,getIsUploadOptionsComponent:()=>$n,getUploadyVersion:()=>dn,getXhrSend:()=>Oe,logWarning:()=>Hn,markAsUploadOptionsComponent:()=>Fn,send:()=>Ae,useAbortAll:()=>Gn,useAbortBatch:()=>zn,useAbortItem:()=>jn,useAllAbortListener:()=>Bn,useBatchAbortListener:()=>Tn,useBatchAddListener:()=>yn,useBatchCancelledListener:()=>Rn,useBatchErrorListener:()=>On,useBatchFinalizeListener:()=>An,useBatchFinishListener:()=>In,useBatchProgressListener:()=>Cn,useBatchStartListener:()=>vn,useClearResumableStore:()=>hs,useFileInput:()=>ts,useItemAbortListener:()=>kn,useItemCancelListener:()=>Un,useItemErrorListener:()=>Dn,useItemFinalizeListener:()=>_n,useItemFinishListener:()=>Pn,useItemProgressListener:()=>Nn,useItemStartListener:()=>wn,useRequestPreSend:()=>Ln,useTusResumeStartListener:()=>fs,useUploadOptions:()=>Mn,useUploady:()=>gn,useUploadyContext:()=>gn,withBatchStartUpdate:()=>Kn,withRequestPreSendUpdate:()=>Vn});var y={};r.r(y),r.d(y,{UploadButton:()=>Ss,asUploadButton:()=>gs,default:()=>bs});var v={};r.r(v),r.d(v,{UploadDropZone:()=>Is,default:()=>Rs});var I={};r.r(I),r.d(I,{default:()=>Ps,usePasteUpload:()=>ws,withPasteUpload:()=>As});var R={};r.r(R),r.d(R,{PREVIEW_TYPES:()=>Us,UploadPreview:()=>Hs,default:()=>Fs,getPreviewsLoaderHook:()=>Bs,getUploadPreviewForBatchItemsMethod:()=>xs});var O={};r.r(O),r.d(O,{UploadUrlInput:()=>qs,default:()=>Ms});var A=r("3lvE"),T=r.n(A),C=r("6dsl");const w="__rpldy-logger-debug__",P={PENDING:"pending",ADDED:"added",PROCESSING:"processing",UPLOADING:"uploading",CANCELLED:"cancelled",FINISHED:"finished",ABORTED:"aborted",ERROR:"error"},U={PENDING:"pending",ADDED:"added",UPLOADING:"uploading",CANCELLED:"cancelled",FINISHED:"finished",ERROR:"error",ABORTED:"aborted"},D=()=>"object"==typeof window&&!!window.document;let k=null;const _=()=>("boolean"!=typeof k&&(k=D()&&("location"in window&&!!~window.location.search.indexOf("rpldy_debug=true")||!0===window[w])),!!k),N=e=>{D()&&(window[w]=e),k=!!e||null},L=(...e)=>{_()&&console.log(...e)},B=(e,t,...r)=>{const n=(t,...r)=>new Promise(((n,s)=>{const a=e(t,...r);a&&a.length?Promise.all(a).catch(s).then((e=>e&&n(!!~e.findIndex((e=>!1===e))))):n(!1)}));return t?n(t,...r):n};var x=r("117w"),H=r.n(x);const F=(e,t,r)=>{let n=!0;const s=(e=>{const t=[].concat(e);return e=>e.map((e=>t.map((t=>e[t])).join()))})(r);if(e&&t&&e.length===t.length){const r=s(e),a=s(t);n=!!r.find(((e,t)=>e!==a[t]))}return!n};var $=r("BZmj"),q=r.n($);const M=e=>q()()?e:Object.freeze(e),j=e=>!!e&&"object"==typeof e&&("Object"===Object.getPrototypeOf(e)?.constructor.name||null===Object.getPrototypeOf(e)),z=e=>j(e)||Array.isArray(e),G=(e={})=>{const t=(r,...n)=>(r&&n.length&&n.forEach((n=>{n&&((e,t)=>{const r=Object.keys(e);return t.withSymbols?r.concat(Object.getOwnPropertySymbols(e)):r})(n,e).forEach((s=>{const a=n[s];e.predicate&&!e.predicate(s,a)||(void 0!==a||e.undefinedOverwrites)&&(z(a)?(void 0!==r[s]&&j(r[s])||(r[s]=Array.isArray(a)?[]:{}),t(r[s],a)):r[s]=a)}))})),r);return t},Q=G(),V=(e,t=Q)=>z(e)?t(Array.isArray(e)?[]:{},e):e,X=(e,t)=>e&&Object.keys(e).reduce(((r,n)=>(~t.indexOf(n)&&(r[n]=e[n]),r)),{}),K=function(e){return!!e&&"object"==typeof e&&"function"==typeof e.then},W=D()&&window.requestIdleCallback,Y=W?window.requestIdleCallback:setTimeout,Z=W?window.cancelIdleCallback:clearTimeout,J=(e,t=0)=>{const r=Y(e,W?{timeout:t}:t);return()=>Z(r)},ee=function(e){return null==e},te=(e,t,...r)=>{const n=(t,...r)=>new Promise(((n,s)=>{const a=e(t,...r);a&&a.length?Promise.all(a).catch(s).then((e=>{let t;if(e)for(;ee(t)&&e.length;)t=e.pop();n(ee(t)?void 0:t)})):n()}));return t?n(t,...r):n},re=Symbol.for("__rpldy-bi__");let ne=0;const se=e=>!("object"!=typeof e||!e.id||!e.batchId||!0!==e[re]),ae=(e,t,r=!1)=>{const n=se(e);ne+=n?0:1;let s={id:n&&e.id&&"string"==typeof e.id?e.id:`${t}.item-${ne}`,batchId:t,state:r?U.PENDING:U.ADDED,uploadStatus:0,total:0,completed:0,loaded:0,recycled:n,previousBatch:n?e.batchId:null};Object.defineProperty(s,re,{value:!0,writable:!0});const a=n?e.file||e.url:e;if("string"==typeof a)s=((e,t)=>(e.url=t,e))(s,a);else{if(!(e=>e&&(e instanceof File||e instanceof Blob||!("object"!=typeof e||!e.name||!e.type)))(a))throw new Error("Unknown type of file added: "+typeof a);s=((e,t)=>(e.file=t,e))(s,a)}return s},oe=class extends Promise{constructor(e,t){super(e),this.xhr=t}},ie=e=>{let t;try{t=e.getAllResponseHeaders().trim().split(/[\r\n]+/).reduce(((e,t)=>{const[r,n]=t.split(": ");return e[r]=n,e}),{})}catch(t){L("uploady.request: failed to read response headers",e)}return t},le=(e,t,r={})=>{const n=new XMLHttpRequest;return new oe(((s,a)=>{n.onerror=()=>a(n),n.ontimeout=()=>a(n),n.onabort=()=>a(n),n.onload=()=>s(n),n.open(r?.method||"GET",e),((e,t)=>{t&&Object.keys(t).forEach((r=>{void 0!==t[r]&&e.setRequestHeader(r,t[r])}))})(n,r?.headers),n.withCredentials=!!r?.withCredentials,r?.preSend?.(n),n.send(t)}),n)},de=(e,t,r)=>(L(`abort: aborting ${e.state} item  - `,e),r(e.id,{status:0,state:U.ABORTED,response:"aborted"}),!0),ue={[U.UPLOADING]:(e,t)=>(L("abort: aborting uploading item  - ",e),t[e.id]()),[U.ADDED]:de,[U.PENDING]:de},ce=(e,t,r)=>{const n=e?.state,s=!!n&&ue[n];return!!s&&s(e,t,r)},pe=(e,t,r,n)=>ce(t[e],r,n),he=(e,t)=>{let r=!1;return 0!==t&&t&&(r=e>=t),r},fe=(e,t,r,n,s)=>{const a=Object.values(r).flat(),o=he(a.length,s.fastAbortThreshold);return L(`abort: doing abort-all (${o?"fast":"normal"} abort)`),o?(e=>{Object.values(e).forEach((e=>e()))})(t):a.forEach((r=>pe(r,e,t,n))),{isFast:o}},me=(e,t,r,n,s,a)=>{const o=0===t.fastAbortThreshold?0:t.fastAbortThreshold||a.fastAbortThreshold,i=he(n[e.id].length,o);return L(`abort: doing abort-batch on: ${e.id} (${i?"fast":"normal"} abort)`),i?((e,t)=>{e.items.forEach((({id:e})=>t[e]?.()))})(e,r):e.items.forEach((e=>ce(e,r,s))),{isFast:i}},ge=()=>e=>(e.update({abortAll:fe,abortBatch:me,abortItem:pe}),e),Se="rpldy-sender";class be extends Error{constructor(e){super(`${e} didn't receive upload URL`),this.name="MissingUrlError"}}const Ee=(e,t,...r)=>{"set"in e?e.set(t,...r):("delete"in e&&e.delete(t),e.append(t,...r))},ye=[200,201,202,203,204],ve=(e,t,r,n,s)=>{let a;const o=s?.getRequestData?s.getRequestData(e,r):((e,t)=>{let r;if(t.sendWithFormData)L(`uploady.sender: sending ${e.length} item(s) as form data`),r=((e,t)=>{const r=new FormData;return t.params&&Object.entries(t.params).forEach((([e,n])=>{(t.formDataAllowUndefined||void 0!==n)&&Ee(r,e,n)})),((e,t,r)=>{const n=1===t.length;t.forEach(((t,s)=>{const a=n?r.paramName:H()(r.formatGroupParamName)?r.formatGroupParamName(s,r.paramName):`${r.paramName}[${s}]`;t.file?Ee(e,a,t.file,t.file.name):t.url&&Ee(e,a,t.url)}))})(r,e,t),r})(e,t);else{if(e.length>1)throw new Error(`XHR Sender - Request without form data can only contain 1 item. received ${e.length}`);const t=e[0];L(`uploady.sender: sending item ${t.id} as request body`),r=t.file||t.url}return r})(e,r),i=(s=t,i=o,l)=>{const d=Q({...X(r,["method","headers","withCredentials"]),preSend:t=>{t.upload.onprogress=t=>{t.lengthComputable&&n&&n(t,e.slice())}}},l),u=le(s,i,d);return a=u.xhr,u},l=s?.preRequestHandler?s.preRequestHandler(i,e,t,r,n,s):i();return{url:t,count:e.length,pXhr:l,getXhr:()=>a,aborted:!1}},Ie=(e,t,r)=>{let n=e;const s=t?.["content-type"];if(r.forceJsonResponse||s?.includes("json"))try{n=JSON.parse(e)}catch{}return n},Re=(e,t)=>e.pXhr.then((e=>(L("uploady.sender: received upload response ",e),((e,t)=>{const r=t.isSuccessfulCall?t.isSuccessfulCall(e):ye.includes(e.status);return K(r)?r:Promise.resolve(r)})(e,t).then((r=>{const n=r?U.FINISHED:U.ERROR,s=e.status,a=ie(e);return{status:s,state:n,response:{data:t.formatServerResponse?.(e.response,s,a)??Ie(e.response,a,t),headers:a}}}))))).catch((t=>{let r,n;return e.aborted?(r=U.ABORTED,n="aborted"):(L("uploady.sender: upload failed: ",t),r=U.ERROR,n=t),{error:!0,state:r,response:n,status:0}})),Oe=e=>(t,r,n,s)=>{if(!r)throw new be(Se);L("uploady.sender: sending file: ",{items:t,url:r,options:n});const a=ve(t,r,n,s,e);return{request:Re(a,n),abort:()=>(e=>{let t=!1;const{aborted:r,getXhr:n}=e,s=n();return!r&&s&&s.readyState&&4!==s.readyState&&(L(`uploady.sender: cancelling request with ${e.count} items to: ${e.url}`),s.abort(),e.aborted=!0,t=!0),t})(a),senderType:Se}},Ae=Oe(),Te=Ae,Ce=M({chunked:!0,chunkSize:5242880,retries:0,parallel:1});let we=null;const Pe=(we=null,D()&&"Blob"in window&&(we=Blob.prototype.slice||Blob.prototype.webkitSlice||Blob.prototype.mozSlice),!!we),Ue=(e,t,r)=>{const n=we?.call(e,t,r,e.type);return n&&(n.name=e.name,n.lastModified=e.lastModified),n};class De extends Error{constructor(e){super(e),this.name="ChunkedSendError"}}const ke=Symbol.for("__rpldy-sstt-proxy__"),_e=Symbol.for("__rpldy-sstt-state__"),Ne=e=>!q()()&&!!e&&!!~Object.getOwnPropertySymbols(e).indexOf(ke),Le=e=>Array.isArray(e)||j(e)&&!(e=>D()&&e instanceof File||e.name&&e.size&&e.uri)(e),Be=G({withSymbols:!0,predicate:e=>e!==ke&&e!==_e}),xe=e=>!!q()()||e[_e].isUpdateable,He=(e,t)=>{q()()||(e[_e].isUpdateable=t)},Fe=(e,t)=>{let r;return Le(e)&&(Ne(e)||(e[ke]=!0,r=new Proxy(e,t)),Object.keys(e).forEach((r=>{e[r]=Fe(e[r],t)}))),r||e},$e=e=>Ne(e)?V(e,Be):e,qe=e=>{const t={set:(e,n,s)=>(xe(r)&&(e[n]=Fe(s,t)),!0),get:(e,t)=>t===ke?$e(e):e[t],defineProperty:()=>{throw new Error("Simple State doesnt support defining property")},setPrototypeOf:()=>{throw new Error("Simple State doesnt support setting prototype")},deleteProperty:(e,t)=>(xe(r)&&delete e[t],!0)};q()()||Ne(e)||Object.defineProperty(e,_e,{value:{isUpdateable:!1},configurable:!0});const r=q()()?e:Fe(e,t);return{state:r,update:e=>{if(!q()()&&xe(r))throw new Error("Can't call update on State already being updated!");try{He(r,!0),e(r)}finally{He(r,!1)}return r},unwrap:e=>e?$e(e):Ne(r)?$e(r):r}},Me=M({CHUNK_START:"CHUNK_START",CHUNK_FINISH:"CHUNK_FINISH"}),je="rpldy-chunked-sender",ze=(e,t,r)=>t&&`bytes ${e.start}-${e.start+t.size-1}/${r.file.size}`,Ge=G({undefinedOverwrites:!0}),Qe=(e,t,r,n,s)=>{if(e.data||t.updateState((()=>{e.data=Ue(r.file,e.start,e.end)})),!e.data)throw new De("chunk failure - failed to slice");const a=t.getState().url;L(`chunkedSender.sendChunk: about to send chunk ${e.id} [${e.start}-${e.end}] to: ${a||""}`);const o=((e,t,r,n,s)=>{const a=t.getState(),o=$e(a.sendOptions),i={...o,headers:{...o.headers,"Content-Range":ze(e,e.data,r)}},l=ae(e.data,e.id),d=t=>{n(t,[e])},u=a.chunks.indexOf(e);return te(s,Me.CHUNK_START,{item:$e(r),chunk:X(e,["id","start","end","index","attempt"]),chunkItem:{...l},sendOptions:i,url:a.url,chunkIndex:u,remainingCount:a.chunks.length,totalCount:a.chunkCount,onProgress:n}).then((e=>{const t=!1===e;return t&&L(`chunkedSender.sendChunk: received false from CHUNK_START handler - skipping chunk ${u}, item ${r.id}`),t?{request:Promise.resolve({state:U.FINISHED,response:"skipping chunk as instructed by CHUNK_START handler",status:200}),abort:()=>!0,senderType:"chunk-skipped-sender"}:Te([l],e?.url||a.url,Ge({},i,e?.sendOptions),d)}))})(e,t,r,n,s);return{request:o.then((({request:e})=>e)),abort:()=>(o.then((({abort:e})=>e())),!0),senderType:"chunk-passthrough-sender"}},Ve=(e,t,r)=>{if(r instanceof De){const r=e.getState().lastChunkErrorData;t({state:U.ERROR,response:{reason:"At least one chunk failed",chunkUploadResponse:r}})}else t({state:U.ERROR,response:r.message})},Xe=(e,t,r,n)=>{e.updateState((e=>{e.finished=!0})),r({state:n,response:{results:e.getState().responses}})},Ke=(e,t,r,n,s,a)=>new Promise(((o,i)=>{try{const i=Qe(s,e,t,r,a);((e,t,r,n,s,a)=>(e.updateState((e=>{e.requests[r]={id:r,abort:n.abort}})),n.request.then((n=>{L(`chunkedSender: request finished for chunk: ${r} - `,n),e.updateState((e=>{delete e.requests[r]}));const o=e.getState().chunks,i=o.findIndex((e=>e.id===r));if(~i){if(n.state===U.FINISHED){const r=o[i];e.updateState((e=>{e.chunks=e.chunks.slice(0,i).concat(e.chunks.slice(i+1))}));const l=r.end-r.start;a({loaded:l,total:t.file.size},[r]),s(Me.CHUNK_FINISH,{chunk:X(r,["id","start","end","index","attempt"]),item:$e(t),uploadData:n})}else n.state!==U.ABORTED&&e.updateState((e=>{e.chunks[i].attempt+=1,e.lastChunkErrorData={status:n.status,response:n.response}}));e.updateState((e=>{e.responses.push(n.response)}))}}))))(e,t,s.id,i,a,r).then((()=>{o(),((e,t,r)=>{const n=e.getState(),s=!n.chunks.length;return n.aborted?(L(`chunkedSender: chunked upload aborted for item: ${t.id}`),Xe(e,0,r,U.ABORTED)):s&&!n.error&&(L(`chunkedSender: chunked upload finished for item: ${t.id}`,n.responses),Xe(e,0,r,U.FINISHED)),s||n.error})(e,t,n)||We(e,t,r,n,a)}))}catch(e){i(e)}})),We=(e,t,r,n,s)=>{const a=e.getState();if(!a.finished&&!a.aborted){const o=Object.keys(a.requests).length;if(!o||a.parallel&&a.parallel>o){let a;try{a=(e=>{const t=e.getState(),r=[],n=Object.keys(t.requests),s=t.parallel||1;for(let e=0;e<t.chunks.length&&n.length<s&&r.length<s;e++){const s=t.chunks[e];if(!n.includes(s.id)){if(s.attempt&&!(s.attempt<t.retries))throw new De("chunk failure");r.push(s)}}return r})(e)}catch(t){Ve(e,n,t)}a&&a.forEach((a=>{Ke(e,t,r,n,a,s).catch((t=>{e.updateState((e=>{e.error=!0})),Ve(e,n,t)}))}))}}},Ye=We,Ze=(e,t,r,n)=>{const s=(n,s)=>{const a=((e,t,r,n)=>{e.updateState((e=>{e.uploaded[r]=Math.max(n,e.uploaded[r]||0)}));const s=e.getState(),a=Object.keys(s.uploaded).reduce(((e,t)=>e+s.uploaded[t]),s.startByte),o=t.file.size;return{loaded:Math.min(a,o),total:o}})(e,t,s[0].id,n.loaded);r(a,[t])};return{sendPromise:new Promise((r=>{Ye(e,t,s,r,n)})),abort:()=>((e,t)=>{L(`chunkedSender: aborting chunked upload for item: ${t.id}`);const r=e.getState();return r.finished||r.aborted||(Object.keys(r.requests).forEach((e=>{L(`chunkedSender: aborting chunk: ${e}`),r.requests[e].abort()})),e.updateState((e=>{e.aborted=!0}))),r.aborted})(e,t)}},Je=(e,t,r,n,s,a)=>{const o=((e,t,r=0)=>{const{chunkSize:n}=t,s=r?e.file.size-r:e.file.size;if(s<=0)throw new De(`start byte ${r} is invalid. File size: ${e.file.size}`);const a=s<=n?1:Math.ceil(s/n);return new Array(a).fill(null).map(((t,s)=>{const a=n*s+(r||0);return{id:`${e.id}_chunk-${s}`,start:a,end:Math.min(a+n,e.file.size),data:null,attempt:0,uploaded:0,index:s}}))})(e,t,n.startByte),i=((e,t,r,n)=>{const{state:s,update:a}=qe({finished:!1,aborted:!1,error:!1,uploaded:{},requests:{},responses:[],chunkCount:e.length,startByte:r.startByte||0,lastChunkErrorData:null,chunks:e,url:t,sendOptions:r,...n});return{getState:()=>s,updateState:e=>{a(e)}}})(o,r,n,t);L(`chunkedSender: created ${o.length} chunks for: ${e.file.name}`);const{sendPromise:l,abort:d}=Ze(i,e,s,a);return{request:l,abort:d,senderType:je}},et=(e,t)=>{const r=(e=>Q({},Ce,e))(e);return{send:(e,n,s,a)=>{let o;return!r.chunked||e.length>1||e[0].url||!e[0].file.size?(o=Te(e,n,s,a),L("chunkedSender: sending items as normal, un-chunked requests")):(L("chunkedSender: sending file as a chunked request"),o=Je(e[0],r,n,s,a,t)),o}}},tt=e=>(t,r)=>{const n=et(e,r);return L("chunkedSenderEnhancer: Created chunked-sender instance with options: ",e),t.update({send:n.send}),t},rt=tt,nt=M({allowRegisterNonExistent:!0,canAddEvents:!0,canRemoveEvents:!0,collectStats:!1}),st=Symbol.for("__le__"),at=Symbol.for("__le__pack__"),ot=e=>e?e[st]:null,it=e=>{const t=ot(e);if(!t)throw new Error("Didnt find LE internal object. Something very bad happened!");return t},lt=e=>!!ot(e),dt=(e,t,r,n=!1)=>{((e,t)=>{if(!H()(e))throw new Error("'cb' is not a valid function")})(r);const s=it(e);if(!s.options.allowRegisterNonExistent&&!~s.events.indexOf(t))throw new Error(`Cannot register for event ${t.toString()} that wasn't already defined (allowRegisterNonExistent = false)`);const a=s.registry[t]||[];return a.find((e=>e.cb===r))||(a.push({name:t,cb:r,once:n}),s.registry[t]=a),()=>gt.call(e,t,r)},ut=(e,t)=>{const r=it(e).registry;return t?r[t]?r[t].slice():[]:Object.values(r).flat()},ct={on:function(e,t){return dt(this,e,t)},once:function(e,t){return dt(this,e,t,!0)},off:gt,getEvents:function(){return it(this).events.slice()}},pt={trigger:function(e,...t){const r=ut(this,e);let n;if(r.length){let s;1===t.length&&!0===t[0]?.[at]&&(s=t[0].resolve()),n=r.map((r=>{let n;return r.once&&mt(this,e,r.cb),n=s?r.cb(...s):t.length?1===t.length?r.cb(t[0]):2===t.length?r.cb(t[0],t[1]):3===t.length?r.cb(t[0],t[1],t[2]):r.cb(...t):r.cb(),n})).filter((e=>!(void 0===e))).map((e=>K(e)?e:Promise.resolve(e)))}return n&&(n.length?n:void 0)},addEvent:function(e){const t=it(this);if(!t.options.canAddEvents)throw new Error("Cannot add new events (canAddEvents = false)");if(~t.events.indexOf(e))throw new Error(`Event '${e}' already defined`);t.events.push(e)},removeEvent:function(e){const t=it(this);if(!t.options.canRemoveEvents)throw new Error("Cannot remove events (canRemoveEvents = false)");{const r=t.events.indexOf(e);t.events.splice(r,1)}},hasEvent:function(e){return!!~it(this).events.indexOf(e)},hasEventRegistrations:function(e){return!!ut(this,e).length},assign:function(e){const t=it(this);return St(e,t.options,t.events,t.registry,t.stats),ht(e)}},ht=e=>Object.keys(pt).reduce(((t,r)=>(t[r]=pt[r].bind(e),t)),{target:e,...pt}),ft=(e,t,r=!1)=>{const n=it(e).registry;!n[t]||!r&&n[t].length||delete n[t]},mt=(e,t,r)=>{const n=it(e).registry;n[t]&&(r?(n[t]=n[t].filter((e=>e.cb!==r)),ft(e,t)):ft(e,t,!0))};function gt(e,t){mt(this,e,t)}const St=(e,t,r=[],n={},s={})=>{Object.defineProperties(e,{[st]:{value:Object.seal({registry:n,events:r,options:t,stats:s})},...Object.entries(ct).reduce(((e,[t,r])=>(e[t]={value:r},e)),{})})},bt=(e,t=[],r)=>{const n=e||{},s={...nt,...r};return lt(n)||St(n,s,t),ht(n)},Et=e=>{const t={resolve:()=>[].concat(e())};return Object.defineProperty(t,at,{value:!0,configurable:!1}),t},yt="rpldy-mock-sender",vt=M({delay:500,progressIntervals:[10,25,50,75,99]}),It=(e,t,r,n,s)=>{const a=e.isSuccessfulCall||t.isSuccessfulCall;return!a||a({readyState:4,status:r,response:n,getAllResponseHeaders:()=>s})},Rt=(e,t,r)=>e.then((({items:e,...n})=>{L("uploady.mockSender: mock request finished successfully",e);const s={"x-request-type":"react-uploady.mockSender"},a=t.responseStatus||200,o={sendOptions:r,mock:!0,success:It(t,r,a,n,s)};return{status:a,state:o.success?U.FINISHED:U.ERROR,response:{...n,headers:s,data:t.response||r.formatServerResponse?.(JSON.stringify(o),a,s)||o}}})).catch((e=>(L("uploady.mockSender: mock request was aborted",e),{status:0,state:U.ABORTED,response:"abort"}))),Ot=e=>{let t={...vt,...e};return{send:(e,r,n,s)=>{L("uploady.mockSender: about to make a mock request for items: ",e);const a=((e,t)=>{const r=performance.now(),n=[],s=t.reduce(((e,t)=>e+(t.file?.size??0)),0);let a=!1,o=!1,i=null,l=null,d=null;const u=()=>{l&&(l.forEach((e=>{clearTimeout(e)})),l=null)},c=new Promise(((s,a)=>{d=a,setTimeout((()=>{o=!0,s({options:e,time:performance.now()-r,progressEvents:n,items:t}),u()}),e.delay||0)}));return e.progressIntervals&&(l=e.progressIntervals.map((r=>{const l=r/100,d=(e.delay||0)*l;return setTimeout((()=>{if(!a&&!o&&i){const r=void 0!==e.fileSize?e.fileSize:s||0,a={total:r,loaded:r*l};n.push(a),i(a,t)}}),d)}))),{then:c.then.bind(c),abort:()=>(a=!0,o=!0,d&&d(),u(),!0),onProgress:e=>{i=e}}})(t,e);return a.onProgress(s),{request:Rt(a,t,n),abort:a.abort,senderType:yt}},update:e=>{t={...t,...e}}}},At=e=>t=>{const r=Ot(e);return t.update({send:r.send}),t},Tt=Ot;var Ct=r("qckQ");const wt=M({BATCH_ADD:"BATCH-ADD",BATCH_START:"BATCH-START",BATCH_PROGRESS:"BATCH_PROGRESS",BATCH_FINISH:"BATCH-FINISH",BATCH_ABORT:"BATCH-ABORT",BATCH_CANCEL:"BATCH-CANCEL",BATCH_ERROR:"BATCH-ERROR",BATCH_FINALIZE:"BATCH-FINALIZE",ITEM_START:"FILE-START",ITEM_CANCEL:"FILE-CANCEL",ITEM_PROGRESS:"FILE-PROGRESS",ITEM_FINISH:"FILE-FINISH",ITEM_ABORT:"FILE-ABORT",ITEM_ERROR:"FILE-ERROR",ITEM_FINALIZE:"FILE-FINALIZE",REQUEST_PRE_SEND:"REQUEST_PRE_SEND",ALL_ABORT:"ALL_ABORT"}),Pt=M({ITEM_PROGRESS:"ITEM_PROGRESS",BATCH_PROGRESS:"BATCH_PROGRESS"}),Ut=[U.FINISHED,U.ERROR,U.CANCELLED,U.ABORTED],Dt=(e,t,r=!1)=>{e.updateState((e=>{const{batchId:n}=e.items[t]||{batchId:null};r&&delete e.items[t];const s=n?e.itemQueue[n].indexOf(t):-1;~s&&n&&e.itemQueue[n].splice(s,1);const a=e.activeIds.indexOf(t);~a&&e.activeIds.splice(a,1)}))},kt=(e,t)=>!!e.getState().items[t],_t=e=>Ut.includes(e.state),Nt=G({undefinedOverwrites:!0}),Lt=(e,t,r,n,s,a)=>{const o=r(t),i=e.getState().batches[o[0].batchId].batchOptions,l=n?.(t,i)||t;return((e,t,r,n,s,a)=>te(e.trigger,s,t,n).then((e=>(a?.(e),((e,t,r,n)=>{let s=r,a=t;if(n){if(L(`uploader.queue: REQUEST_PRE_SEND(${e}) event returned updated items/options`,n),n.items){if(n.items.length!==t.length||!F(n.items,t,["id","batchId","recycled"]))throw new Error(`REQUEST_PRE_SEND(${e}) event handlers must return same items with same ids`);a=n.items}n.options&&(s=Nt({},r,n.options))}return{items:a,options:s,cancelled:!1===n}})(s,r,n,e)))))(e,l,o,i,a,s).then((t=>(t.cancelled||((e,t)=>{if(t.items[0]&&e.getState().batches[t.items[0].batchId]){e.updateState((e=>{t.items.forEach((t=>{_t(e.items[t.id])||(e.items[t.id]=t)})),e.batches[t.items[0].batchId].batchOptions=t.options}));const r=e.getState();t.items=t.items.map((e=>r.items[e.id])),t.options=r.batches[t.items[0].batchId].batchOptions}})(e,t),t)))},Bt=(e,t,r=null,n=null)=>(s,a)=>Lt(s,a,t,r,n,e),xt=Bt(wt.BATCH_START,(e=>e.items),null,(({batch:e}={batch:!1})=>{if(e)throw new Error("BATCH_START event handlers cannot update batch data. Only items & options")})),Ht=[P.ADDED,P.PROCESSING,P.UPLOADING],Ft=[P.ABORTED,P.CANCELLED,P.FINISHED,P.ERROR],$t=(e,t)=>e.batches[t].batch,qt=(e,t)=>{const r=e.getState(),n=r.items[t];return r.batches[n.batchId]},Mt=(e,t)=>qt(e,t).batch,jt=(e,t)=>{const r=((e,t)=>$t(e.getState(),t))(e,t);r.items.forEach((({id:t})=>Dt(e,t,!0)))},zt=(e,t)=>{e.updateState((e=>{delete e.batches[t],delete e.itemQueue[t];const r=e.batchQueue.indexOf(t);~r&&e.batchQueue.splice(r,1);const n=e.batchesStartPending.indexOf(t);~n&&e.batchesStartPending.splice(n,1)}))},Gt=(e,t,r,n=P.FINISHED,s)=>{e.updateState((e=>{const r=$t(e,t);r.state=n,s&&(r.additionalInfo=s)})),Vt(e,t,r),Vt(e,t,wt.BATCH_FINALIZE)},Qt=(e,t)=>{L("uploady.uploader.batchHelpers: cancelling batch: ",t),Gt(e,t,wt.BATCH_CANCEL,P.CANCELLED),jt(e,t),zt(e,t)},Vt=(e,t,r)=>{const n=e.getState(),{batch:s,batchOptions:a}=n.batches[t],o=n.items,i={...$e(s),items:s.items.map((({id:e})=>$e(o[e])))};e.trigger(r,i,$e(a))},Xt=(e,t)=>{const r=$t(e.getState(),t);return Ht.includes(r.state)},Kt=e=>Ft.includes(e.state),Wt={[U.PENDING]:null,[U.ADDED]:wt.ITEM_START,[U.FINISHED]:wt.ITEM_FINISH,[U.ERROR]:wt.ITEM_ERROR,[U.CANCELLED]:wt.ITEM_CANCEL,[U.ABORTED]:wt.ITEM_ABORT,[U.UPLOADING]:wt.ITEM_PROGRESS},Yt=e=>!!~Ut.indexOf(e.state),Zt=(e,t,r)=>{t.forEach((t=>{const r=e.getState(),{id:n,info:s}=t;if(L("uploader.processor.queue: request finished for item - ",{id:n,info:s}),r.items[n]){e.updateState((e=>{const t=e.items[n];t.state=s.state,t.uploadResponse=s.response,t.uploadStatus=s.status,Yt(t)&&delete e.aborts[n]}));const t=e.getState().items[n];if(s.state===U.FINISHED&&t.completed<100){const r=t.file?.size||0;e.handleItemProgress(t,100,r,r)}const{batchOptions:r}=qt(e,n);Wt[t.state]&&e.trigger(Wt[t.state],t,r),Yt(t)&&(((e,t)=>{e.updateState((e=>{e.batches[t].finishedCounter+=1}))})(e,t.batchId),e.trigger(wt.ITEM_FINALIZE,t,r))}Dt(e,n)})),(e=>{J((()=>{const t=e.getState();Object.keys(t.batches).forEach((r=>{const{batch:n,finishedCounter:s}=t.batches[r],{orgItemCount:a}=n,o=Kt(n);a===s&&(o||100===n.completed||(e.updateState((e=>{const t=$t(e,r);t.completed=100,t.loaded=t.items.reduce(((e,{loaded:t})=>e+t),0)})),Vt(e,r,wt.BATCH_PROGRESS)),e.updateState((e=>{e.currentBatch===r&&(e.currentBatch=null)})),L(`uploady.uploader.batchHelpers: cleaning up batch: ${n.id}`),o||Gt(e,r,wt.BATCH_FINISH),jt(e,r),zt(e,r))}))}))})(e),r(e)},Jt=Bt(wt.REQUEST_PRE_SEND,(e=>e),((e,t)=>({items:e,options:t}))),er=({allowedItems:e,cancelledResults:t,queue:r,items:n,ids:s,next:a})=>{const o=e.length?Jt(r,e):Promise.resolve();let i=t;return o.catch((e=>{L("uploader.queue: encountered error while preparing items for request",e),((e,t,r,n)=>{const s=r.map((({id:t})=>({id:t,info:{status:0,state:U.ERROR,response:e}})));Zt(t,s,n)})(e,r,n,a)})).then((e=>{let t;return e&&(e.cancelled?i=s.map((()=>!0)):e.items.some((e=>_t(e)))?L("uploader.queue: send data contains aborted items - not sending"):((e,t,r)=>{const{items:n,options:s}=t,a=e.getState().batches[n[0].batchId]?.batch;if(a){let t;try{t=e.sender.send(n,a,s)}catch(e){L("uploader.queue: sender failed with unexpected error",e),t={request:Promise.resolve({status:0,state:U.ERROR,response:e.message}),abort:()=>!1,senderType:"exception-handler"}}const{request:o}=t;((e,t,r)=>{e.updateState((e=>{t.forEach((t=>{e.items[t.id].state=U.UPLOADING,e.aborts[t.id]=r.abort}))}))})(e,n,t),o.then((t=>{const s=n.map((e=>({id:e.id,info:t})));Zt(e,s,r)}))}})(r,{items:e.items,options:e.options},a)),((e,t,r,n)=>{const s=r.map(((e,r)=>e?t[r].id:null)).filter(Boolean);if(s.length){const t=s.map((e=>({id:e,info:{status:0,state:U.CANCELLED,response:"cancel"}})));Zt(e,t,n)}return!!s.length})(r,n,i,a)||(t=a(r)),t}))},tr=(e,t)=>e.getState().activeIds.flat().includes(t),rr=e=>{let t;const r=(e=>{const t=e.getState(),r=t.itemQueue,[n,s]=(e=>{const t=e.getState(),r=t.itemQueue,n=t.items;let s=null,a=0,o=0,i=t.batchQueue[a];for(;i&&!s;){if(Xt(e,i))for(s=r[i][o];s&&(tr(e,s)||n[s].state!==U.ADDED);)o+=1,s=r[i][o];s||(a+=1,i=t.batchQueue[a],o=0)}return s?[i,o]:null})(e)||[];let a,o=n&&~s?r[n][s]:null;if(o){const{batchOptions:e}=t.batches[n],r=e.maxGroupSize||0;a=e.grouped&&r>1?t.itemQueue[n].slice(s,s+r):[o]}return a})(e);if(r){const n=e.getCurrentActiveCount(),{concurrent:s=!1,maxConcurrent:a=0}=e.getOptions();(!n||s&&n<a)&&(L("uploader.processor: Processing next upload - ",{ids:r,currentCount:n}),t=((e,t)=>{let r;return((e,t)=>{const r=Mt(e,t);return e.getState().batchesStartPending.includes(r.id)})(e,t[0])?r=Promise.resolve(!0):(((e,t)=>{e.updateState((e=>{e.activeIds=e.activeIds.concat(t)}))})(e,t),r=((e,t)=>{const r=Mt(e,t);return e.getState().currentBatch!==r.id})(e,t[0])?((e,t)=>{const r=Mt(e,t);return e.updateState((e=>{e.batchesStartPending.push(r.id)})),xt(e,r).then((({cancelled:n})=>{let s=!1;return e.updateState((e=>{const t=e.batchesStartPending.indexOf(r.id);e.batchesStartPending.splice(t,1)})),n||(s=!kt(e,t),s||e.updateState((e=>{e.currentBatch=r.id}))),!n&&!s}))})(e,t[0]).then((r=>{let n=!r;return n&&(((e,t)=>{if(kt(e,t)){const r=qt(e,t),n=r?.batch.id;n?Qt(e,n):L(`uploady.uploader.batchHelpers: cancel batch called for batch already removed (item id = ${t})`)}})(e,t[0]),rr(e)),n})).catch((r=>(L("uploader.processor: encountered error while preparing batch for request",r),((e,t,r)=>{const n=Mt(e,t),s=n.id;L("uploady.uploader.batchHelpers: failing batch: ",{batch:n}),Gt(e,s,wt.BATCH_ERROR,P.ERROR,r.message),jt(e,s),zt(e,s)})(e,t[0],r),rr(e),!0))):Promise.resolve(!1)),r})(e,r).then((t=>{t||(((e,t,r)=>{const n=e.getState();let s=Object.values(n.items);s=s.filter((e=>t.includes(e.id)&&!_t(e))),Promise.all(s.map((t=>{const{batchOptions:r}=qt(e,t.id);return e.runCancellable(wt.ITEM_START,t,r)}))).then((n=>{let a=n.map(((t,r)=>t?null:((e,t)=>{const r=t.getState().items[e];return r&&!_t(r)?r:void 0})(s[r].id,e))).filter(Boolean);return{allowedItems:a,cancelledResults:n,queue:e,items:s,ids:t,next:r}})).then(er)})(e,r,rr),s&&rr(e))})))}return t},nr=rr,sr=e=>(t,r)=>Zt(e,[{id:t,info:r}],nr),ar=()=>!0,or=M({autoUpload:!0,clearPendingOnAdd:!1,inputFieldName:"file",concurrent:!1,maxConcurrent:2,grouped:!1,maxGroupSize:5,method:"POST",params:{},fileFilter:ar,forceJsonResponse:!1,withCredentials:!1,destination:{},send:null,sendWithFormData:!0,formDataAllowUndefined:!1,fastAbortThreshold:100}),ir=()=>{const{trigger:e,target:t}=bt({send:(t,r,n)=>{const s=n.destination,a=s?.url,o=(0,C.A)((n=>((e,t,r,n)=>{((e,t,r,n,s)=>{e.forEach((e=>{L(`uploady.uploader.processor: file: ${e.id} progress event: loaded(${r}) - completed(${t})`),s(Pt.ITEM_PROGRESS,e,t,r,n)}))})(e,Math.min(r.loaded/r.total*100,100)/e.length,r.loaded/e.length,r.total,n),n(Pt.BATCH_PROGRESS,t)})(t,r,n,e)),50,!0);return(H()(n.send)?n.send:Te)(t,a,{method:s?.method||n.method||or.method,paramName:s?.filesParamName||n.inputFieldName||"file",params:{...n.params,...s?.params},forceJsonResponse:n.forceJsonResponse,withCredentials:n.withCredentials,formatGroupParamName:n.formatGroupParamName,headers:s?.headers,sendWithFormData:n.sendWithFormData,formatServerResponse:n.formatServerResponse,formDataAllowUndefined:n.formDataAllowUndefined,isSuccessfulCall:n.isSuccessfulCall},o)}},Object.values(Pt));return t},lr=D()&&"FileList"in window,dr=(e,t=0)=>{let r=e;return q()()||(t<3&&Ne(e)?r=$e(e):t<3&&Le(e)&&(r=Array.isArray(e)?e.map((e=>dr(e,t+1))):Object.keys(e).reduce(((r,n)=>(r[n]=dr(e[n],t+1),r)),{}))),r};let ur=0;const cr=(e,t,r,n)=>{const s=((e,t,r,n,s)=>{const{state:a,update:o}=qe({itemQueue:{},batchQueue:[],currentBatch:null,batchesStartPending:[],batches:{},items:{},activeIds:[],aborts:{}}),i=()=>a,l=e=>{o(e)},d=e=>{if(a.items[e.id]&&!e.recycled)throw new Error(`Uploader queue conflict - item ${e.id} already exists`);e.recycled&&((e,t)=>{const{previousBatch:r}=t;if(t.recycled&&r&&e.getState().batches[r]){const{id:n}=Mt(e,t.id);n===r&&e.updateState((e=>{const r=$t(e,n),s=r.items.findIndex((({id:e})=>e===t.id));~s&&r.items.splice(s,1)}))}})(c,e),l((t=>{t.items[e.id]=e}))},u=(e,r,n,s)=>{a.items[e.id]&&(l((t=>{const a=t.items[e.id];a.loaded=n,a.completed=r,a.total=s})),t(wt.ITEM_PROGRESS,i().items[e.id]))};n.on(Pt.ITEM_PROGRESS,u),n.on(Pt.BATCH_PROGRESS,(e=>{const t=a.batches[e.id]?.batch.items;if(t){const[r,n]=t.reduce(((e,{id:t})=>{const{loaded:r,file:n}=a.items[t],s=n?.size||r||1;return e[0]+=r,e[1]+=s,e}),[0,0]);l((t=>{const s=t.batches[e.id].batch;s.total=n,s.loaded=r,s.completed=r/n})),Vt(c,e.id,wt.BATCH_PROGRESS)}}));const c={uploaderId:s,getOptions:()=>e,getCurrentActiveCount:()=>a.activeIds.length,getState:i,updateState:l,trigger:t,runCancellable:(e,...t)=>{if(!H()(r))throw new Error("Uploader queue - cancellable is of wrong type");return r(e,...t)},sender:n,handleItemProgress:u,clearAllUploads:()=>{c.updateState((e=>{e.itemQueue={},e.batchQueue=[],e.currentBatch=null,e.batches={},e.items={},e.activeIds=[]}))},clearBatchUploads:e=>{J((()=>{L(`uploader.queue: started scheduled work to clear batch uploads (${e})`),i().batches[e]&&((e,t)=>{e.updateState((e=>{const{items:r}=$t(e,t);delete e.batches[t],delete e.itemQueue[t];const n=e.batchQueue.indexOf(t);~n&&e.batchQueue.splice(n,1),e.currentBatch===t&&(e.currentBatch=null),r.forEach((({id:t})=>{delete e.items[t];const r=e.activeIds.indexOf(t);~r&&e.activeIds.splice(r,1)}))}))})(c,e)}))}};return D()&&_()&&(window[`__rpldy_${s}_queue_state`]=c),{updateState:l,getState:c.getState,runCancellable:c.runCancellable,uploadBatch:(e,t)=>{t&&l((r=>{r.batches[e.id].batchOptions=t})),nr(c)},addBatch:(e,t)=>(l((r=>{r.batches[e.id]={batch:e,batchOptions:t,finishedCounter:0},r.batchQueue.push(e.id),r.itemQueue[e.id]=e.items.map((({id:e})=>e))})),e.items.forEach(d),$t(a,e.id)),abortItem:(...e)=>((e,t)=>{const r=e.getOptions().abortItem;T()(!!r,"Abort Item method not provided yet abortItem was called");const n=e.getState();return r(t,n.items,n.aborts,sr(e))})(c,...e),abortBatch:(...e)=>((e,t)=>{const r=e.getOptions().abortBatch;T()(!!r,"Abort Batch method not provided yet abortItem was called");const n=e.getState(),s=n.batches[t],a=s?.batch;if(a&&!Kt(a)){Gt(e,t,wt.BATCH_ABORT,P.ABORTED);const{isFast:o}=r(a,s.batchOptions,n.aborts,n.itemQueue,sr(e),e.getOptions());o&&e.clearBatchUploads(a.id)}})(c,...e),abortAll:(...e)=>(e=>{const t=e.getOptions().abortAll;T()(!!t,"Abort All method not provided yet abortAll was called"),e.trigger(wt.ALL_ABORT);const r=e.getState(),{isFast:n}=t(r.items,r.aborts,r.itemQueue,sr(e),e.getOptions());n&&e.clearAllUploads()})(c,...e),clearPendingBatches:()=>{(e=>{const t=e.getState().batches;Object.keys(t).filter((e=>t[e].batch.state===P.PENDING)).forEach((t=>{jt(e,t),zt(e,t)}))})(c)},uploadPendingBatches:e=>{((e,t)=>{e.updateState((e=>{Object.keys(e.batches).forEach((r=>{const n=e.batches[r],{batch:s,batchOptions:a}=n;s.state===P.PENDING&&(s.items.forEach((e=>{e.state=U.ADDED})),s.state=P.ADDED,n.batchOptions=Q({},a,t))}))}))})(c,e),nr(c)},cancelBatch:e=>Qt(c,e.id)}})(r,e,t,ir(),n);return{abortBatch:e=>{s.abortBatch(e)},abort:e=>{e?s.abortItem(e):s.abortAll()},addNewBatch:(e,t)=>((e,t,r)=>{ur+=1;const n=`batch-${ur}`,s=(e=>lr&&e instanceof FileList||"[object FileList]"===e.toString())(e),a=Array.isArray(e)||s?e:[e],o=!r.autoUpload;return((e,t,r,n)=>{const s=n?Array.prototype.map.call(t,(e=>se(e)?e.file||e.url:e)):[];return Promise.all(Array.prototype.map.call(t,((e,t)=>{const r=(n||ar)(s[t],t,s);return K(r)?r.then((t=>!!t&&e)):!!r&&e}))).then((t=>t.filter(Boolean).map((t=>ae(t,e,r)))))})(n,a,o,r.fileFilter).then((e=>({id:n,uploaderId:t,items:e,state:o?P.PENDING:P.ADDED,completed:0,loaded:0,orgItemCount:e.length,additionalInfo:null})))})(e,n,t).then((e=>{let r;if(e.items.length){const a=s.addBatch(e,t);r=s.runCancellable(wt.BATCH_ADD,a,t).then((e=>(e?s.cancelBatch(a):(L(`uploady.uploader [${n}]: new items added - auto upload =\n                       ${String(t.autoUpload)}`,a.items),t.autoUpload&&s.uploadBatch(a)),a)))}else L(`uploady.uploader: no items to add. batch ${e.id} is empty. check fileFilter if this isn't intended`);return r||Promise.resolve(null)})),clearPendingBatches:()=>{s.clearPendingBatches()},processPendingBatches:e=>{s.uploadPendingBatches(e)}}},pr=(...e)=>(t,...r)=>e.reduce(((e,t)=>t(e,...r)||e),t),hr=Object.values(wt);let fr=0;const mr=e=>{fr+=1;const t=`uploader-${fr}`;let r=!1;const n={};L(`uploady.uploader: creating new instance (${t})`,{options:e,counter:fr});let s=(e=>{return{...or,...e,destination:e&&e.destination?(t=e.destination,{params:{},...t}):null};var t})(e);const a=()=>{c.clearPendingBatches()};let{trigger:o,target:i}=bt({id:t,update:e=>(s=Q({},s,e),i),add:(e,t)=>{const r=Q({},s,t);return r.clearPendingOnAdd&&a(),c.addNewBatch(e,r).then((()=>{L("uploady.uploader: finished adding file data to be processed")}))},upload:e=>{c.processPendingBatches(e)},abort:e=>{c.abort(e)},abortBatch:e=>{c.abortBatch(e)},getOptions:()=>V(s),clearPending:a,registerExtension:(e,t)=>{T()(r,"Uploady - uploader extensions can only be registered by enhancers"),T()(!n[e],"Uploady - uploader extension by this name [%s] already exists",e),L(`uploady.uploader: registering extension: ${e.toString()}`,t),n[e]=t},getExtension:e=>n[e]},hr,{canAddEvents:!1,canRemoveEvents:!1});const l=(e,...t)=>{const r=Et((()=>t.map(dr)));return o(e,r)},d=B(l),u=((e,t,r,n)=>{const s=t.enhancer?(a=t.enhancer,pr(ge(),a)):ge();var a;n(!0);const o=s(e,r);return n(!1),o||e})(i,s,l,(e=>{r=e})),c=cr(l,d,s,u.id);return M(u)},gr=mr,Sr=Symbol.for("__upldy-retry__"),br="RETRY_EVENT",Er=[U.ABORTED,U.ERROR],yr=(e,t,r,n,s)=>{const a=t.getState().failed,o=n||Object.keys(a),i=o.map((e=>a[e])).filter(Boolean);if(i.length){const n={...s||null,autoUpload:void 0===s?.autoUpload||s.autoUpload};r(br,{items:i,options:n}),o?.forEach((e=>((e,t)=>{e.updateState((e=>{const r=e.failed[t].batchId;delete e.failed[t];const n=e.batchIdsMap[r].indexOf(t);e.batchIdsMap[r].splice(n,1),e.batchIdsMap[r].length||delete e.batchIdsMap[r]}))})(t,e))),e.add(i,n)}return!!i.length},vr=(e,t)=>{const r=(()=>{const{state:e,update:t}=qe({batchIdsMap:{},failed:{}});return{updateState:e=>{t(e)},getState:()=>e}})();return((e,t)=>{e.on(wt.ITEM_FINALIZE,(e=>{Er.includes(e.state)&&t.updateState((t=>{t.failed[e.id]=e,(t.batchIdsMap[e.batchId]=t.batchIdsMap[e.batchId]||[]).push(e.id)}))}))})(e,r),e.registerExtension(Sr,{retry:(n,s)=>((e,t,r,n,s)=>{let a;return n?a=((e,t,r,n,s)=>(L(`uploady.retry: about to retry item: ${n}`),yr(e,t,r,[n],s)))(e,t,r,n,s):(L("uploady.retry: about to retry all failed item"),a=yr(e,t,r,null,s)),a})(e,r,t,n,s),retryBatch:(n,s)=>((e,t,r,n,s)=>{L(`uploady.retry: about to retry batch: ${n}`);const a=t.getState().batchIdsMap[n]?.slice();return!!a&&yr(e,t,r,a,s)})(e,r,t,n,s)}),e},Ir=e=>{let t=!1;(()=>{try{if(D()&&e in window){const r="__lsTest";window[e].setItem(r,`__test-${Date.now()}`),window[e].removeItem(r),t=!0}}catch(e){}})();const r=["key","getItem","setItem","removeItem","clear"].reduce(((r,n)=>(r[n]=(...r)=>t?window[e][n](...r):void 0,r)),{isSupported:t,length:0});return Object.defineProperty(r,"length",{get:()=>t?window[e].length:0}),r},Rr=Ir("localStorage"),Or=Ir("sessionStorage"),Ar=M({...Ce,featureDetection:!1,featureDetectionUrl:null,version:"1.0.0",resume:!0,overrideMethod:!1,deferLength:!1,sendDataOnCreate:!1,storagePrefix:"__rpldy-tus__",lockedRetryDelay:2e3,forgetOnSuccess:!1,ignoreModifiedDateInStorage:!1}),Tr=(e,t,r)=>{const n=[e.file.name,e.file.type,e.file.size,t.ignoreModifiedDateInStorage?null:e.file.lastModified,r].filter(Boolean).join("/");return`${t.storagePrefix||Ar.storagePrefix}${n}`},Cr=(e,t,r,n)=>{r.resume&&Rr.setItem(Tr(e,r,n),JSON.stringify({time:Date.now(),uploadUrl:t}))},wr=(e,t,r)=>{const n=Tr(e,t,r);Rr.removeItem(n)},Pr=e=>{const t=e.storagePrefix||Ar.storagePrefix;for(let e=0;e<Rr.length;e++){const r=Rr.key(e);r&&!r.indexOf(t)&&Rr.removeItem(r)}},Ur=Symbol.for("__upldy-tus__"),Dr="rpldy-tus-sender",kr=[200,201,204],_r="creation-with-upload",Nr="concatenation",Lr="creation-defer-length",Br=M({RESUME_START:"RESUME_START"}),xr=e=>{const t=e.params&&Object.keys(e.params);return t?.length?t.map((t=>`${t} ${btoa(e.params[t])}`)).join(","):void 0},Hr=(e,t)=>e.then((e=>(e.state===U.FINISHED&&(e.response.location=t),e))),Fr=(e,t,r,n,s)=>{const{options:a}=r.getState(),o={"tus-resumable":a.version,"Upload-Defer-Length":a.deferLength?1:void 0,"Upload-Length":a.deferLength?void 0:e.file.size,"Upload-Metadata":s?void 0:xr(n),"Content-Type":a.sendDataOnCreate?"application/offset+octet-stream":void 0,"Upload-Concat":s?"partial":void 0,...n.headers};let i=null;if(L(`tusSender.create - creating upload for ${e.id} at: ${t}`),a.sendDataOnCreate){const t=+a.chunkSize;L("tusSender.create - adding first chunk to create request",{chunkSize:t,actualSize:e.file.size}),i=t<e.file.size?Ue(e.file,0,t):e.file}const l=le(t,i,{method:"POST",headers:o});let d=!1;return{request:l.then((n=>{let s=null;return n&&~kr.indexOf(n.status)?s=((e,t,r,n,s)=>{const{options:a}=r.getState(),o=((e,t)=>{let r;return r=/^(http:|https:)?\/\//.test(t)?t:t.startsWith("/")?(e.startsWith("/")?"":new URL(e).origin.replace(/\/$/,""))+t:[e.replace(/\/$/,""),t.replace(/^\//,"")].join("/"),r})(t,n.getResponseHeader("Location"));let i=0,l=!1;if(L(`tusSender.create: successfully created upload for item: ${e.id} - upload url = ${o}`),a.sendDataOnCreate){const e=parseInt(n.getResponseHeader("Upload-Offset"));i=isNaN(e)?i:e,l=+a.parallel>1&&i===s?.size}return r.updateState((t=>{t.items[e.id].uploadUrl=o,t.items[e.id].offset=i})),{offset:i,uploadUrl:o,isNew:!0,isDone:l}})(e,t,r,n,i):L(`tusSender.create: create upload failed for item: ${e.id}`,n),s})).catch((e=>(L("tusSender.create: create upload failed",e),null))).finally((()=>{d=!0})),abort:()=>(d||(L(`tusSender.create: aborting create request for item: ${e.id}`),l.xhr.abort()),!d)}},$r=G({undefinedOverwrites:!0}),qr=(e,t,r)=>(wr(e,t,r),{isNew:!1,canResume:!1}),Mr=(e,t,r,n,s,a)=>{const{options:o}=r.getState();let i=!1,l=!1;L(`tusSender.resume - resuming upload for ${e.id}${s?`-${s}`:""} at: ${t}`);const d=((e,t,r,n)=>{const{options:s}=r.getState();return te(n,Br.RESUME_START,{url:t,item:$e(e),resumeHeaders:$e(s.resumeHeaders)}).then((r=>{const n=!1===r;n&&L(`tusSender.resume: received false from TUS RESUME_START event - cancelling resume attempt for item: ${e.id}`);const a=!n&&le(r?.url||t,null,{method:"HEAD",headers:$r({"tus-resumable":s.version},s.resumeHeaders,r?.resumeHeaders)});return()=>a}))})(e,t,r,n);return{request:d.then((d=>{i=!d();const u=()=>qr(e,o,s);return i||l?Promise.resolve(u()):d().then((o=>i||l?u():((e,t,r,n,s,a,o)=>{let i;const{options:l}=n.getState();return e&&~kr.indexOf(e.status)?i=((e,t,r,n)=>{L(`tusSender.resume - successfully initiated resume for item: ${e.id} - upload url = ${t}`);let s=!1,a=!1;const o=parseInt(n.getResponseHeader("Upload-Offset"));if(!isNaN(o)){const i=parseInt(n.getResponseHeader("Upload-Length"));isNaN(i)&&!r.getState().options.deferLength||(a=o===i,s=!a,r.updateState((r=>{r.items[e.id].uploadUrl=t,r.items[e.id].offset=o})))}return{offset:o,uploadUrl:t,isNew:!1,isDone:a,canResume:s}})(t,r,n,e):423===e?.status&&0===o?(L(`tusSender.resume: upload is locked for item: ${t.id}. Will retry in ${+l.lockedRetryDelay}`,e),i=((e,t,r,n,s,a)=>new Promise((a=>{setTimeout((()=>{Mr(e,t,r,n,s,1).request.then(a)}),r.getState().options.lockedRetryDelay)})))(t,r,n,s,a)):(L(`tusSender.resume: failed for item: ${t.id}${a?`-${a}`:""}`,e),i=qr(t,l,a)),i})(o,e,t,r,n,s,a))).catch((e=>(L("tusSender.resume: resume upload failed unexpectedly",e),u()))).finally((()=>{i=!0}))})),abort:()=>(i||(L(`tusSender.resume: aborting resume request for item: ${e.id}`),i=!0,l=!0,d.then((e=>{const t=e();t?.xhr?.abort()}))),!i)}},jr=(e,t,r,n,s,a,o,i,l)=>o.then((o=>{let d,u=!1;if(o?o.isDone?(L(`tusSender.handler: resume found server has completed file for item: ${e[0].id}`,e[0]),d=Hr(Promise.resolve({status:200,state:U.FINISHED,response:{message:"TUS server has file"}}),o.uploadUrl)):o.isNew||o.canResume?d=l?((e,t,r,n)=>{const s=e[0];return r.uploadUrl&&Cr(s,r.uploadUrl,t.getState().options,n),L(`tusSender.handler: created upload for parallelized chunk: ${s.id}`),Promise.resolve({status:200,state:U.UPLOADING,response:"TUS server created upload for parallelized part"})})(e,s,o,l):((e,t,r,n,s,a,o)=>{const{options:i}=s.getState(),l=e[0];L(`tusSender.handler: init request finished. sending item ${l.id} as chunked`,o);let d=r;o.isNew&&o.uploadUrl&&Cr(l,o.uploadUrl,i),(o.canResume||i.sendDataOnCreate&&o.offset)&&(d={...r,startByte:o.offset});const u=a.send(e,t,d,n);return s.updateState((e=>{e.items[l.id].abort=u.abort})),+i.parallel>1?((e,t,r,n,s)=>s.then((s=>{let a;if(s.state===U.FINISHED){const{options:o,items:i}=r.getState(),l=i[e.id];if(l){const d=l.parallelChunks,u=d.filter((e=>i[e]?.uploadUrl)).map((e=>i[e].uploadUrl));if(u.length!==d.length)throw new Error(`tusSender: something went wrong. found ${u.length} upload urls for ${d.length} chunks`);const c={"tus-resumable":o.version,"Upload-Concat":`final;${u.join(" ")}`,"Upload-Metadata":xr(n)};L("tusSender.finalizeParallel: sending finalizing request",{url:t,headers:c});const p=le(t,null,{method:"POST",headers:c});r.updateState((t=>{t.items[e.id].abort=()=>(p.xhr.abort(),!0)})),a=((e,t)=>e.catch((e=>(L("tusSender.finalizeParallel: finalize request failed unexpectedly!",e),e))).then((e=>{let r;const n=e?.status||0,s=!!~kr.indexOf(n),a=s&&e&&"getResponseHeader"in e&&e.getResponseHeader("Location");return a?(L("tusSender.finalizeParallel: successfully finalized parallel upload",a),r=Hr(Promise.resolve(t),a)):(L("tusSender.finalizeParallel: parallel upload finalize failed!",n),r={status:n,state:U.ERROR,response:{message:e?.response||(s&&!a?"No valid location header for finalize request":"")}}),r})))(p,s)}}return a||Promise.resolve(s)})))(l,t,s,d,u.request):Hr(u.request,o.uploadUrl)})(e,t,r,n,s,a,o):u=!0:u=i,u){L(`tusSender.handler: resume init failed. Will try creating a new upload for item: ${e[0].id}`);const{request:o}=Fr(e[0],t,s,r);d=jr(e,t,r,n,s,a,o)}return d||Promise.resolve({status:0,state:U.ERROR,response:"TUS initialize failed"})})),zr=jr,Gr=(e,t,r,n,s,a,o,i=null)=>{const{options:l}=s.getState(),d=+l.parallel>1&&!i,u=e[0],c=!d&&((e,t,r)=>{let n;const s=Tr(e,t,r);if(t.resume)try{const e=Rr.getItem(s);e&&(n=JSON.parse(e).uploadUrl)}catch(e){L(`tusSender.resumableStore: failed to retrieve persisted data for key: ${s}`,e)}return n})(u,l,i);let p;return((e,t)=>{t.updateState((t=>{t.items[e.id]={id:e.id,uploadUrl:null,size:e.file.size,offset:0,parallelChunks:[]}}))})(u,s),p=d?{request:Promise.resolve({isNew:!0}),abort:()=>!0}:c?((e,t,r,n,s)=>Mr(e,t,r,n,s,0))(u,c,s,o,i):Fr(u,t,s,r,i),{request:zr(e,t,r,n,s,a,p.request,!!c,i),abort:()=>(L(`tusSender.handler: abort called for item: ${u.id}`),p.abort(),p.request.then((e=>{if(e){L(`tusSender.handler: aborting chunked upload for item:  ${u.id}`);const e=s.getState().items[u.id].abort;e&&e()}})),!0)}},Qr="PATCH",Vr=(e,t)=>`_prlChunk_${+e.chunkSize}_${t}`,Xr=e=>({...e,"Content-Range":void 0}),Kr=e=>`rpldy_tus_fd_${e}`,Wr={[Nr]:(e,t)=>{+t.getState().options.parallel>1&&!~e.indexOf(Nr)&&(L(`tusSender.featureDetection: disabling parallel uploads, ${Nr} extension not available`),t.updateState((e=>{e.options.parallel=1})))},[_r]:(e,t)=>{t.getState().options.sendDataOnCreate&&!~e.indexOf(_r)&&(L(`tusSender.featureDetection: disabling create with data, ${_r} extension not available`),t.updateState((e=>{e.options.sendDataOnCreate=!1})))},[Lr]:(e,t)=>{t.getState().options.deferLength&&!~e.indexOf(Lr)&&(L(`tusSender.featureDetection: disabling defer length, ${Lr} extension not available`),t.updateState((e=>{e.options.deferLength=!1})))}},Yr=(e,t,r)=>{const{options:n}=e.getState();if(t){L("tusSender.featureDetection: retrieved extensions from server",t);const r=t.split(",");if(r.length&&n.onFeaturesDetected){const t=n.onFeaturesDetected(r);t&&e.updateState((e=>{e.options=Q({},e.options,t)}))}else Object.keys(Wr).forEach((t=>{Wr[t](r,e)}))}r&&r!==e.getState().options.version&&(L(`tusSender.featureDetection: setting version to server version: ${r}`),e.updateState((e=>{e.options.version=r}))),e.updateState((e=>{e.featureDetection={processed:!0,version:r,extensions:t}}))},Zr=(e,t,r)=>e.catch((e=>{L("tusSender.featureDetection: failed to retrieve data from server",e)})).then((e=>{if(e&&~kr.indexOf(e.status)){const n=e.getResponseHeader("Tus-Extension"),s=e.getResponseHeader("Tus-Resumable");n&&Or.setItem(Kr(t),JSON.stringify({extensions:n,versions:s})),Yr(r,n,s)}})),Jr=(e,t)=>{const{options:r}=t.getState(),n=le(e,null,{method:"OPTIONS",headers:{"tus-resumable":r.version}});return{request:Zr(n,e,t),abort:()=>(n.xhr.abort(),!0)}},en=(e,t,r)=>Pe?(n,s,a,o)=>{let i;if(!s)throw new be(Dr);if(n.length>1||n[0].url)i=e.send(n,s,a,o);else{L("tusSender: sending file using TUS protocol");let l=t.getState().options.featureDetection?((e,t)=>{let r;const{options:n,featureDetection:s}=t.getState(),a=n.featureDetectionUrl||e;L("tusSender.featureDetection: about to request server info",a);const o=Or.getItem(Kr(a));return s.processed||(r=o?((e,t,r)=>{let n;try{if(n=JSON.parse(r),n?.extensions){const{extensions:e,version:r}=n;L("tusSender.featureDetection: retrieved feature detection data from session storage",n),Yr(t,e,r)}else n=null}catch(e){L("tusSender.featureDetection: failed to load feature detection data from session storage")}return n||Or.removeItem(Kr(e)),n?null:Jr(e,t)})(a,t,o):Jr(a,t)),r})(s,t):null;const{request:d,abort:u}=((e,t,r,n,s,a,o,i)=>{let l;const d=()=>{const o=Gr(e,t,r,n,s,a,i);return l=o.abort,o.request};return{request:o?o.request.then(d,d):d(),abort:()=>l?l():o?.abort()||!1}})(n,s,a,o,t,e,l,r);i={request:d,abort:u,senderType:Dr}}return i}:Te,tn=(e,t,r)=>{const n=(e=>{const t=(e=>Q({},Ar,e))(e);return(t.sendDataOnCreate||t.parallel)&&t.deferLength&&(L("tusSender: turning off deferLength - cannot be used when sendDataOnCreate or parallel is enabled"),t.deferLength=!1),t.chunked=!0,t})(t),s=et(n,r),a=((e,t)=>{const{state:r,update:n}=qe({options:t,items:{},featureDetection:{extensions:null,version:null,processed:!1}}),s={getState:()=>r,updateState:n};return D()&&_()&&(window[`__rpldy_${e.id}_tus_state`]=s),s})(e,n);return((e,t,r,n)=>{Pe&&(e.on(wt.ITEM_FINALIZE,(e=>{const{items:r,options:n}=t.getState(),s=r[e.id];if(s){L(`tusSender.handleEvents: item ${e.id} finalized (${e.state}). Removing from state`);const r=s.parallelChunks;t.updateState((t=>{r.length&&r.forEach((e=>{delete t.items[e]})),delete t.items[e.id]})),n.forgetOnSuccess&&(L(`tusSender.handleEvents: forgetOnSuccess enabled, removing item url from storage: ${e.id}`),wr(e,n))}})),e.on(Me.CHUNK_START,(e=>{const{options:s}=t.getState(),a=+s.parallel>1,o=a?((e,t,r,n)=>{const{item:s,chunkItem:a,url:o,sendOptions:i,onProgress:l,chunk:d}=r,{options:u}=e.getState();return e.updateState((e=>{e.items[s.id].parallelChunks.push(a.id)})),Gr([a],o,{...i,headers:Xr(i.headers),params:null},l,e,t,n,Vr(u,d.index)).request.then((e=>e.state!==U.FINISHED))})(t,r,e,n):Promise.resolve(!0);return o.then((r=>r&&((e,t,r)=>{const{item:n,chunk:s,chunkItem:a,remainingCount:o}=t,{options:i}=e.getState(),l=e.getState().items[r?a.id:n.id],d=r?0:l.offset||s.start,u=Xr({"tus-resumable":i.version,"Upload-Offset":d,"Content-Type":"application/offset+octet-stream","X-HTTP-Method-Override":i.overrideMethod?Qr:void 0,"Upload-Length":i.deferLength&&!o?n.file.size:void 0,"Upload-Concat":r?"partial":void 0});return L(`tusSender.handleEvents: chunk start handler. offset = ${d}`,{headers:u,url:l.uploadUrl}),{sendOptions:{sendWithFormData:!1,method:i.overrideMethod?"POST":Qr,headers:u},url:l.uploadUrl}})(t,e,a)))})),e.on(Me.CHUNK_FINISH,(({item:e,chunk:r,uploadData:n})=>{const{items:s,options:a}=t.getState();if(+a.parallel>1){if(a.forgetOnSuccess){const t=Vr(a,r.index);L(`tusSender.handleEvents: forgetOnSuccess enabled, removing parallel chunk url from storage: ${t}`),wr(e,a,t)}}else if(s[e.id]){const{status:s,response:a}=n;L(`tusSender.handleEvents: received upload response (code: ${s}) for : ${e.id}, chunk: ${r.id}`,a),~kr.indexOf(s)&&a.headers&&t.updateState((t=>{t.items[e.id].offset=a.headers["upload-offset"]}))}})))})(e,a,s,r),{send:en(s,a,r),getOptions:()=>a.getState().options}},rn=e=>(t,r)=>{const n=tn(t,e,r);return t.update({send:n.send}),t.registerExtension(Ur,{getOptions:n.getOptions}),t},nn=rn;var sn=r("+Bzv"),an=r("+TXh"),on=r.n(an);const ln=Symbol.for("_rpldy-version_"),dn=()=>"1.8.2",un=()=>D()?window:globalThis||process,cn=()=>un()[ln],pn="Uploady - Context. File input isn't available",hn=(e,t)=>{let r,n,s=!1;t?r=t:L("Uploady context - didn't receive input field ref - waiting for external ref");const a=()=>r?.current,o=()=>{const e=a();T()(e,pn),e.removeEventListener("change",o);const t=n;n=null,i(e.files,t)},i=(t,r)=>{e.add(t,r)};return un()[ln]=dn(),{hasUploader:()=>!!e,getInternalFileInput:()=>(r&&(s=!0),r),setExternalFileInput:e=>{s=!0,r=e},getIsUsingExternalInput:()=>s,showFileUpload:e=>{const t=a();T()(t,pn),n=e,t.removeEventListener("change",o),t.addEventListener("change",o),t.value="",t.click()},upload:i,processPending:t=>{e.upload(t)},clearPending:()=>{e.clearPending()},setOptions:t=>{e.update(t)},getOptions:()=>e.getOptions(),getExtension:t=>e.getExtension(t),abort:t=>{e.abort(t)},abortBatch:t=>{e.abortBatch(t)},on:(t,r)=>e.on(t,r),once:(t,r)=>e.once(t,r),off:(t,r)=>e.off(t,r)}},fn=on().createContext(null),mn=e=>(T()(!(()=>{const e=cn();return!!e&&e!==dn()})(),"Uploady - Valid UploadyContext not found.\nYou may be using packages of different Uploady versions. <Uploady> and all other packages using the context provider must be of the same version: %s",cn()),T()(e&&e.hasUploader(),"Uploady - Valid UploadyContext not found. Make sure you render inside <Uploady>"),e),gn=()=>mn((0,an.useContext)(fn)),Sn=(e,t)=>{const r=gn(),{on:n,off:s}=r;(0,an.useEffect)((()=>(n(e,t),()=>{s(e,t)})),[e,t,n,s])},bn=(e,t)=>(r,n)=>{const[s,a]=(0,an.useState)(null);let o=r,i=n;r&&!H()(r)&&(i=r,o=void 0);const l=(0,an.useCallback)(((e,...r)=>{i&&e.id!==i||(a(t(e,...r)),H()(o)&&o(e,...r))}),[o,i]);return Sn(e,l),s},En=(e,t=!0)=>(r,n)=>{const s=(0,an.useCallback)(((e,...s)=>!r||t&&n&&e.id!==n?void 0:r(e,...s)),[r,n]);Sn(e,s)},yn=En(wt.BATCH_ADD,!1),vn=En(wt.BATCH_START),In=En(wt.BATCH_FINISH),Rn=En(wt.BATCH_CANCEL),On=En(wt.BATCH_ERROR),An=En(wt.BATCH_FINALIZE),Tn=En(wt.BATCH_ABORT),Cn=bn(wt.BATCH_PROGRESS,(e=>({...e}))),wn=En(wt.ITEM_START),Pn=En(wt.ITEM_FINISH),Un=En(wt.ITEM_CANCEL),Dn=En(wt.ITEM_ERROR),kn=En(wt.ITEM_ABORT),_n=En(wt.ITEM_FINALIZE),Nn=bn(wt.ITEM_PROGRESS,(e=>({...e}))),Ln=En(wt.REQUEST_PRE_SEND,!1),Bn=En(wt.ALL_ABORT,!1),xn=Symbol.for("rpldy_component"),Hn=(e,t)=>{q()()||e||console.warn(t)},Fn=e=>{e[xn]=!0},$n=e=>!0===e[xn]||!0===e.target?.[xn]||!0===e.render?.[xn],qn=e=>{const{listeners:t,debug:r,children:n,inputRef:s,...a}=e;N(!!r),L("@@@@@@ Uploady Rendering @@@@@@",e);const o=((e,t)=>{const r=(0,an.useMemo)((()=>(L("Uploady creating a new uploader instance",e),gr(e))),[e.enhancer]);return r.update(e),(0,an.useEffect)((()=>(t&&(L("Uploady setting event listeners",t),Object.entries(t).forEach((([e,t])=>{r.on(e,t)}))),()=>{t&&(L("Uploady removing event listeners",t),Object.entries(t).forEach((([e,t])=>r.off(e,t))))})),[t,r]),r})(a,t),i=(0,an.useMemo)((()=>hn(o,s)),[o,s]);return on().createElement(fn.Provider,{value:i},n)},Mn=e=>{const t=gn();return e&&t.setOptions(e),t.getOptions()},jn=()=>{const e=gn();return(0,an.useCallback)((t=>e.abort(t)),[e])},zn=()=>{const e=gn();return(0,an.useCallback)((t=>e.abortBatch(t)),[e])},Gn=()=>{const e=gn();return(0,an.useCallback)((()=>e.abort()),[e])},Qn=({eventType:e,getIsValidEventData:t,getRequestData:r})=>n=>s=>{const a=gn(),[o,i]=(0,an.useState)({updateRequest:null,requestData:null}),{id:l}=s;return(0,an.useLayoutEffect)((()=>{const n=(...s)=>!0===t(l,...s)?new Promise((t=>{i({updateRequest:r=>{a.off(e,n),t(r)},requestData:r(...s)})})):void 0;return l&&a.on(e,n),()=>{l&&a.off(e,n)}}),[a,l]),on().createElement(n,(0,sn.A)({},s,o))},Vn=Qn({eventType:wt.REQUEST_PRE_SEND,getIsValidEventData:(e,{items:t})=>!!t.find((t=>t.id===e)),getRequestData:({items:e,options:t})=>({items:e,options:t})}),Xn=Qn({eventType:wt.BATCH_START,getIsValidEventData:(e,t)=>t.id===e,getRequestData:(e,t)=>({batch:e,items:e.items,options:t})}),Kn=Xn;var Wn=r("XYNb"),Yn=r.n(Wn);const Zn=(e,t,r)=>on().createElement("input",(0,sn.A)({},e,{name:t.inputFieldName,type:"file",ref:r})),Jn=(0,an.memo)((0,an.forwardRef)((({container:e,noPortal:t,...r},n)=>{const s=Mn(),a=e&&1===e.nodeType;return T()(a||!D(),"Uploady - Container for file input must be a valid dom element"),t?Zn(r,s,n):((e,t,r,n,s)=>e&&t?Yn().createPortal(Zn(r,n,s),e):null)(e,a,r,s,n)}))),es=e=>{const{multiple:t=!0,capture:r,accept:n,webkitdirectory:s,children:a,inputFieldContainer:o,customInput:i,fileInputId:l,noPortal:d=!1,...u}=e,c=i?null:o||(D()?document.body:null),p=(0,an.useRef)();return on().createElement(qn,(0,sn.A)({},u,{inputRef:p}),i?null:on().createElement(Jn,{container:c,multiple:t,capture:r,accept:n,webkitdirectory:s?.toString(),style:{display:"none"},ref:p,id:l,noPortal:d}),a)},ts=e=>{const t=gn();return e&&t.setExternalFileInput(e),(0,an.useEffect)((()=>{if(e?.current&&"closest"in e.current){const r=e.current,n=t.getOptions();if(!n.destination||!n.destination.url){const e=(e=>{const t=e.closest("form");let r={filesParamName:e.getAttribute("name"),method:void 0,url:void 0};if(t){const e=t.getAttribute("method"),n=(e=>{const t=window.location;let r,n=e.getAttribute("action")||"";switch(n=n.replace(/\s/g,""),!0){case""===n:n=t.href;break;case n.startsWith("/"):n=`${t.protocol}//${t.host}${n}`;break;case!/:\/\//.test(n):r=t.pathname.split("/").slice(0,-1).concat("").join("/"),n=`${t.protocol}//${t.host}${r}${n}`}return n})(t);r.method=e?e.toUpperCase():void 0,r.url=n,L(`Uploady.useFileInput: using custom input's parent form url ${r.url} and method ${r.method||""}`)}return r})(r);t.setOptions({destination:e})}}}),[e,t]),e||t.getInternalFileInput()},rs=es;Hn(Pe||!D(),"This browser doesn't support chunking. Consider using @rpldy/uploady instead");const ns=e=>{const{chunked:t,chunkSize:r,retries:n,parallel:s,...a}=e,o=(0,an.useMemo)((()=>Pe?((e,t)=>{const r=rt(e);return t?pr(r,t):r})({chunked:t,chunkSize:r,retries:n,parallel:s},e.enhancer):void 0),[e.enhancer,t,r,n,s]);return on().createElement(rs,(0,sn.A)({},a,{enhancer:o}))},ss=En(Me.CHUNK_START,!1),as=En(Me.CHUNK_FINISH,!1),os=ns,is="Uploady - retry was not registered. Make sure you used the enhancer",ls=()=>{const e=gn().getExtension(Sr);return T()(e,is),e.retry},ds=()=>{const e=gn().getExtension(Sr);return T()(e,is),e.retryBatch},us=En(br,!1),cs=vr;Hn(Pe,"This browser doesn't support chunking. Consider using @rpldy/uploady instead");const ps=e=>{const{chunked:t,chunkSize:r,retries:n,parallel:s,version:a,featureDetection:o,featureDetectionUrl:i,onFeaturesDetected:l,resume:d,deferLength:u,overrideMethod:c,sendDataOnCreate:p,storagePrefix:h,lockedRetryDelay:f,forgetOnSuccess:m,ignoreModifiedDateInStorage:g,resumeHeaders:S,...b}=e,E=(0,an.useMemo)((()=>Pe?((e,t)=>{const r=rn(e);return t?pr(r,t):r})({chunked:t,chunkSize:r,retries:n,parallel:s,version:a,featureDetection:o,featureDetectionUrl:i,onFeaturesDetected:l,resume:d,deferLength:u,overrideMethod:c,sendDataOnCreate:p,storagePrefix:h,lockedRetryDelay:f,forgetOnSuccess:m,ignoreModifiedDateInStorage:g,resumeHeaders:S},e.enhancer):void 0),[e.enhancer,t,r,n,s,a,o,i,l,d,u,c,p,h,f,m,g,S]);return on().createElement(rs,(0,sn.A)({},b,{enhancer:E}))},hs=()=>{const e=gn().getExtension(Ur);return T()(e,"Uploady - tus was not registered. Make sure you used the enhancer"),()=>Pr(e.getOptions())},fs=En(Br.RESUME_START),ms=ps,gs=e=>{const t=(t,r)=>{const{showFileUpload:n}=gn(),{id:s,className:a,text:o,children:i,extraProps:l,onClick:d,...u}=t,c=(0,an.useRef)();c.current=u;const p=(0,an.useCallback)((e=>{n(c.current),d?.(e)}),[n,c,d]);return on().createElement(e,(0,sn.A)({ref:r,onClick:p,id:s,className:a,children:i||o||"Upload"},l))};return Fn(t),(0,an.forwardRef)(t)},Ss=gs((0,an.forwardRef)(((e,t)=>on().createElement("button",(0,sn.A)({ref:t},e))))),bs=Ss;var Es=r("HiPP");const ys=(e,t,r)=>{const n="dragleave"===e.type?e.relatedTarget:e.target;return n===t||r&&t?.contains(n)},vs=(0,an.forwardRef)((({className:e,id:t,children:r,onDragOverClassName:n,dropHandler:s,htmlDirContentParams:a,shouldRemoveDragOver:o,shouldHandleDrag:i,enableOnContains:l=!0,extraProps:d,...u},c)=>{const{upload:p}=gn(),h=(0,an.useRef)(null),f=(0,an.useRef)(!1);(0,an.useImperativeHandle)(c,(()=>h.current),[]);const m=(0,an.useRef)();m.current=u;const g=(0,an.useCallback)((()=>{f.current=!1,h.current&&n&&h.current.classList.remove(n)}),[n,h]),S=(0,an.useCallback)((e=>{const t=()=>(0,Es.getFilesFromDragEvent)(e,a||{});return s?Promise.resolve(s(e,t)):t()}),[s,a]),b=(0,an.useCallback)((e=>{S(e).then((e=>{p(e,m.current)}))}),[p,S,m]),E=(0,an.useCallback)((e=>{((e,t)=>ee(t)||!0===t||H()(t)&&t(e))(e,i)&&ys(e,h.current,l)&&(f.current=!0,h.current&&n&&h.current.classList.add(n))}),[n,h,i,l]),y=(0,an.useCallback)((e=>{f.current&&e.preventDefault()}),[]),v=(0,an.useCallback)((e=>{f.current&&(e.preventDefault(),e.persist(),g(),b(e))}),[g,b]),I=(0,an.useCallback)((e=>{(f.current&&!ys(e,h.current,l)||o?.(e))&&g()}),[g,h,o,l]),R=(0,an.useCallback)((e=>{f.current&&(e.preventDefault(),e.stopPropagation(),g())}),[g]);return on().createElement("div",(0,sn.A)({id:t,className:e,ref:h,onDragOver:y,onDragEnter:E,onDrop:v,onDragLeave:I,onDragEnd:R},d),r)}));Fn(vs);const Is=vs,Rs=Is,Os=(e,t)=>{const{upload:r}=gn(),n=(0,an.useRef)();return n.current=e,(0,an.useCallback)((e=>{const s=e.clipboardData?.files;s?.length&&(r(s,n.current),t?.({count:s.length}))}),[r,n,t])},As=e=>(0,an.forwardRef)(((t,r)=>{const{id:n,className:s,children:a,onPasteUpload:o,extraProps:i,...l}=t,d=Os(l,o),u=$n(e)?{...l,extraProps:{...i,onPaste:d}}:{...i,onPaste:d};return on().createElement(e,(0,sn.A)({ref:r,id:n,className:s},u),a)})),Ts=(e,t)=>{(e||window).addEventListener("paste",t)},Cs=(e,t)=>{(e||window).removeEventListener("paste",t)},ws=(e,t,r)=>{const n=(0,an.useRef)(!0),s=Os(e,r),a=(0,an.useCallback)((()=>{const e=t?.current;return n.current=!n.current,n.current?Ts(e,s):Cs(e,s),n.current}),[t,s]),o=(0,an.useCallback)((()=>n.current),[]);return(0,an.useEffect)((()=>{const e=t?.current;return n.current&&Ts(e,s),()=>{n.current&&Cs(e,s)}}),[t,s]),{toggle:a,getIsEnabled:o}},Ps=As,Us={IMAGE:"image",VIDEO:"video"},Ds=M({rememberPreviousBatches:!1,loadFirstOnly:!1,maxPreviewImageSize:2e7,maxPreviewVideoSize:1e8,fallbackUrl:"",imageMimeTypes:["image/jpeg","image/webp","image/gif","image/png","image/apng","image/bmp","image/x-icon","image/svg+xml"],videoMimeTypes:["video/mp4","video/webm","video/ogg"],previewComponentProps:void 0}),ks=(e,t)=>{let r=H()(e)?e(t):e;return"string"==typeof r&&(r={url:r,name:t.name,type:Us.IMAGE}),r},_s=(e,t,r,n)=>{let s;return t&&~t.indexOf(n.type)&&(!r||n.size<=r)&&(s={url:URL.createObjectURL(n),name:n.name,type:e}),s},Ns=(e,t,r,n)=>H()(e)?e(t,r,n):e,Ls=(e,t)=>{const r=[];return t.forEach((t=>{const n=e.findIndex((e=>e.id===t.id));~n?e.splice(n,1,t):r.push(t)})),e.concat(r)},Bs=e=>t=>{const{previewComponentProps:r,rememberPreviousBatches:n}=t||{},[s,a]=(0,an.useState)({previews:[],items:[]}),o=(i=t,{...Ds,...i});var i;const l=(0,an.useCallback)((()=>{a({previews:[],items:[]})}),[]),d=(0,an.useCallback)((e=>{a((({previews:t,items:r})=>({previews:t.filter((t=>t.id!==e)),items:r.filter((t=>t.id!==e))})))}),[]);return e((e=>{const t=o.loadFirstOnly?e.items.slice(0,1):e.items,r=t.map((e=>((e,t,r)=>{let n,s=!1;if(e.file){const r=e.file;n=((e,t)=>{let r=_s(Us.IMAGE,t.imageMimeTypes,t.maxPreviewImageSize||0,e);return r||(r=_s(Us.VIDEO,t.videoMimeTypes,t.maxPreviewVideoSize||0,e)),r})(e.file,t),n||(n=ks(t.fallbackUrl,r),s=!0)}else n={url:e.url,name:e.url,type:Us.IMAGE};return n&&{...n,id:e.id,isFallback:s,removePreview:()=>r(e.id)}})(e,o,d))).filter(Boolean);a({previews:n?Ls(s.previews,r):r,items:n?s.items.concat(t):t})})),{previews:(0,an.useMemo)((()=>((e,t,r)=>{let n=e;return r&&(n=e.map((e=>({...e,props:Ns(r,t.find((({id:t})=>t===e.id)),e.url,e.type)})))),n})(s.previews,s.items,r)),[s,r]),clearPreviews:l,removeItemFromPreview:d}},xs=(e=vn)=>{const t=Bs(e);return e=>{const{PreviewComponent:r,previewMethodsRef:n,onPreviewsChanged:s,...a}=e,{previews:o,clearPreviews:i,removeItemFromPreview:l}=t(a),d=(0,an.useCallback)((t=>{const r=t.currentTarget,n=ks(e.fallbackUrl,r.src);n&&(r.src=n.url)}),[e.fallbackUrl]);return((e,t,r,n,s)=>{(0,an.useImperativeHandle)(r,(()=>({clear:t,removePreview:s})),[t,s]),(0,an.useEffect)((()=>{n&&n(e)}),[e,n])})(o,i,n,s,l),o.map((e=>{const{id:t,url:n,type:s,name:a,isFallback:o,removePreview:i,props:l}=e;return r?on().createElement(r,(0,sn.A)({key:t+n,id:t,url:n,type:s,name:a,isFallback:o,removePreview:i},l)):((e,t,r,n)=>e===Us.VIDEO?on().createElement("video",(0,sn.A)({key:t,src:t,controls:!0},r)):on().createElement("img",(0,sn.A)({key:t,onError:n,src:t},r)))(s,n,l,d)}))}},Hs=xs(),Fs=Hs,$s=(0,an.forwardRef)(((e,t)=>{const r=(0,an.useRef)(null),n=gn(),{className:s,id:a,placeholder:o,uploadRef:i,validate:l,ignoreKeyPress:d,...u}=e,c=(0,an.useRef)();c.current=u,(0,an.useImperativeHandle)(t,(()=>r.current),[]);const p=(0,an.useCallback)((()=>{const e=r.current,t=e?.value;(l?l(t,e):t)&&n.upload(t,c.current)}),[n,l,c,r]),h=(0,an.useCallback)((e=>{d||"Enter"!==e.key||p()}),[p,d]);return(0,an.useImperativeHandle)(i,(()=>p),[p]),on().createElement("input",{type:"text",id:a,ref:r,className:s,onKeyPress:h,placeholder:o})}));Fn($s);const qs=$s,Ms=$s},"+TXh":t=>{"use strict";t.exports=e},XYNb:e=>{"use strict";e.exports=t}},s={};function a(e){var t=s[e];if(void 0!==t)return t.exports;var r=s[e]={exports:{}};return n[e].call(r.exports,r,r.exports,a),r.exports}a.m=n,r=[],a.O=(e,t,n,s)=>{if(!t){var o=1/0;for(u=0;u<r.length;u++){for(var[t,n,s]=r[u],i=!0,l=0;l<t.length;l++)(!1&s||o>=s)&&Object.keys(a.O).every((e=>a.O[e](t[l])))?t.splice(l--,1):(i=!1,s<o&&(o=s));if(i){r.splice(u--,1);var d=n();void 0!==d&&(e=d)}}return e}s=s||0;for(var u=r.length;u>0&&r[u-1][2]>s;u--)r[u]=r[u-1];r[u]=[t,n,s]},a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={792:0};a.O.j=t=>0===e[t];var t=(t,r)=>{var n,s,[o,i,l]=r,d=0;if(o.some((t=>0!==e[t]))){for(n in i)a.o(i,n)&&(a.m[n]=i[n]);if(l)var u=l(a)}for(t&&t(r);d<o.length;d++)s=o[d],a.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return a.O(u)},r=globalThis.webpackChunkrpldy=globalThis.webpackChunkrpldy||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var o=a.O(void 0,[461],(()=>a("OG09")));return a.O(o)})()));
//# sourceMappingURL=rpldy-all.umd.min.js.map