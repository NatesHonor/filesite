"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _sharedUi = require("@rpldy/shared-ui");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const asUploadButton = Component => {
  const AsUploadButton = (props, ref) => {
    const {
      showFileUpload
    } = (0, _sharedUi.useUploadyContext)();
    const {
      id,
      className,
      text,
      children,
      extraProps,
      onClick,
      ...uploadOptions
    } = props;
    const uploadOptionsRef = (0, _react.useRef)();
    uploadOptionsRef.current = uploadOptions;
    const onButtonClick = (0, _react.useCallback)(e => {
      showFileUpload(uploadOptionsRef.current);
      onClick?.(e);
    }, [showFileUpload, uploadOptionsRef, onClick]);
    return /*#__PURE__*/_react.default.createElement(Component, _extends({
      ref: ref,
      onClick: onButtonClick,
      id: id,
      className: className,
      children: children || text || "Upload"
    }, extraProps));
  };
  (0, _sharedUi.markAsUploadOptionsComponent)(AsUploadButton);
  return /*#__PURE__*/(0, _react.forwardRef)(AsUploadButton);
};
var _default = exports.default = asUploadButton;